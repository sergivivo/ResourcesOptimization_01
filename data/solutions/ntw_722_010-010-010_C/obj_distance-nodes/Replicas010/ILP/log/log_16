Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sergi/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/52488c8700e34bbaa89b1f6a419538b4-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/52488c8700e34bbaa89b1f6a419538b4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2246 COLUMNS
At line 19637 RHS
At line 21879 BOUNDS
At line 22990 ENDATA
Problem MODEL has 2241 rows, 1110 columns and 14620 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.940711 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 987 strengthened rows, 120 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 989 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 938 strengthened rows, 10 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 861 strengthened rows, 12 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 663 strengthened rows, 16 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 520 strengthened rows, 24 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 361 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 243 strengthened rows, 20 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 10 substitutions
Cgl0004I processed model has 2139 rows, 1012 columns (1012 integer (1012 of which binary)) and 19337 elements
Cbc0038I Initial state - 88 integers unsatisfied sum - 37.8662
Cbc0038I Solution found of 0.97895
Cbc0038I Before mini branch and bound, 924 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.90 seconds)
Cbc0038I Round again with cutoff of 0.975117
Cbc0038I Reduced cost fixing fixed 25 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.38891 (2) obj. 0.975117 iterations 365
Cbc0038I Pass   2: suminf.    0.67626 (2) obj. 0.965904 iterations 85
Cbc0038I Pass   3: suminf.    3.40433 (40) obj. 0.975117 iterations 519
Cbc0038I Pass   4: suminf.    2.18767 (16) obj. 0.965904 iterations 368
Cbc0038I Pass   5: suminf.    2.38027 (9) obj. 0.975117 iterations 301
Cbc0038I Pass   6: suminf.    2.22894 (10) obj. 0.975117 iterations 183
Cbc0038I Pass   7: suminf.    4.57852 (12) obj. 0.975117 iterations 213
Cbc0038I Pass   8: suminf.    4.57852 (12) obj. 0.975117 iterations 3
Cbc0038I Pass   9: suminf.    1.22288 (6) obj. 0.975117 iterations 68
Cbc0038I Pass  10: suminf.    1.22288 (6) obj. 0.975117 iterations 20
Cbc0038I Pass  11: suminf.    2.11658 (6) obj. 0.975117 iterations 36
Cbc0038I Pass  12: suminf.    2.11658 (6) obj. 0.975117 iterations 3
Cbc0038I Pass  13: suminf.    1.22288 (6) obj. 0.975117 iterations 68
Cbc0038I Pass  14: suminf.    6.86366 (88) obj. 0.975117 iterations 630
Cbc0038I Pass  15: suminf.    2.11545 (26) obj. 0.969857 iterations 476
Cbc0038I Pass  16: suminf.    2.11545 (26) obj. 0.969857 iterations 9
Cbc0038I Pass  17: suminf.    2.18911 (7) obj. 0.975117 iterations 318
Cbc0038I Pass  18: suminf.    2.03909 (6) obj. 0.975117 iterations 106
Cbc0038I Pass  19: suminf.    2.31061 (6) obj. 0.975117 iterations 111
Cbc0038I Pass  20: suminf.    6.09820 (37) obj. 0.975117 iterations 733
Cbc0038I Pass  21: suminf.    3.09205 (20) obj. 0.975117 iterations 332
Cbc0038I Pass  22: suminf.    2.57770 (18) obj. 0.970984 iterations 157
Cbc0038I Pass  23: suminf.    1.53837 (8) obj. 0.975117 iterations 429
Cbc0038I Pass  24: suminf.    0.32733 (6) obj. 0.975117 iterations 483
Cbc0038I Pass  25: suminf.    0.45472 (6) obj. 0.975117 iterations 109
Cbc0038I Pass  26: suminf.    9.47473 (110) obj. 0.975117 iterations 948
Cbc0038I Pass  27: suminf.    0.76262 (28) obj. 0.975117 iterations 567
Cbc0038I Pass  28: suminf.    0.75178 (35) obj. 0.975117 iterations 20
Cbc0038I Pass  29: suminf.    2.14299 (14) obj. 0.975117 iterations 197
Cbc0038I Pass  30: suminf.    1.57340 (13) obj. 0.972334 iterations 304
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 749 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2139 rows 1012 columns, reduced to 934 rows 240 columns - 25 fixed gives 358, 98 - ok now
Cbc0038I Full problem 2139 rows 1012 columns, reduced to 137 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 0.97895 to 0.964871 (4.63 seconds)
Cbc0038I Round again with cutoff of 0.960031
Cbc0038I Reduced cost fixing fixed 162 variables on major pass 3
Cbc0038I Pass  30: suminf.    1.38156 (12) obj. 0.960031 iterations 83
Cbc0038I Pass  31: suminf.    1.38156 (12) obj. 0.960031 iterations 3
Cbc0038I Pass  32: suminf.    4.33655 (15) obj. 0.953601 iterations 322
Cbc0038I Pass  33: suminf.    2.25848 (6) obj. 0.959332 iterations 24
Cbc0038I Pass  34: suminf.    2.27997 (8) obj. 0.960031 iterations 65
Cbc0038I Pass  35: suminf.    2.27997 (8) obj. 0.960031 iterations 5
Cbc0038I Pass  36: suminf.    1.38891 (8) obj. 0.960031 iterations 75
Cbc0038I Pass  37: suminf.    1.38156 (12) obj. 0.960031 iterations 167
Cbc0038I Pass  38: suminf.    4.33655 (15) obj. 0.953601 iterations 171
Cbc0038I Pass  39: suminf.    2.25848 (6) obj. 0.959332 iterations 21
Cbc0038I Pass  40: suminf.    2.27997 (8) obj. 0.960031 iterations 86
Cbc0038I Pass  41: suminf.    2.27997 (8) obj. 0.960031 iterations 11
Cbc0038I Pass  42: suminf.    1.38891 (8) obj. 0.960031 iterations 81
Cbc0038I Pass  43: suminf.    1.38156 (12) obj. 0.960031 iterations 206
Cbc0038I Pass  44: suminf.    4.33655 (15) obj. 0.953601 iterations 219
Cbc0038I Pass  45: suminf.    2.25848 (6) obj. 0.959332 iterations 29
Cbc0038I Pass  46: suminf.    2.27997 (8) obj. 0.960031 iterations 91
Cbc0038I Pass  47: suminf.    2.27997 (8) obj. 0.960031 iterations 7
Cbc0038I Pass  48: suminf.    1.38891 (8) obj. 0.960031 iterations 88
Cbc0038I Pass  49: suminf.    1.38156 (12) obj. 0.960031 iterations 199
Cbc0038I Pass  50: suminf.    4.15529 (13) obj. 0.955387 iterations 226
Cbc0038I Pass  51: suminf.    2.25848 (6) obj. 0.959332 iterations 16
Cbc0038I Pass  52: suminf.    2.27997 (8) obj. 0.960031 iterations 91
Cbc0038I Pass  53: suminf.    2.27997 (8) obj. 0.960031 iterations 5
Cbc0038I Pass  54: suminf.    1.38891 (8) obj. 0.960031 iterations 115
Cbc0038I Pass  55: suminf.    1.38156 (12) obj. 0.960031 iterations 184
Cbc0038I Pass  56: suminf.    4.33655 (15) obj. 0.953601 iterations 229
Cbc0038I Pass  57: suminf.    2.25848 (6) obj. 0.959332 iterations 16
Cbc0038I Pass  58: suminf.    2.27997 (8) obj. 0.960031 iterations 122
Cbc0038I Pass  59: suminf.    2.27997 (8) obj. 0.960031 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 920 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2139 rows 1012 columns, reduced to 164 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (5.37 seconds)
Cbc0038I After 5.37 seconds - Feasibility pump exiting with objective of 0.964871 - took 0.83 seconds
Cbc0012I Integer solution of 0.96487078 found by feasibility pump after 0 iterations and 0 nodes (5.37 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 11.7
Cbc0013I At root node, 10 cuts changed objective from 0.94071123 to 0.96487078 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 4.6 elements, 56 column cuts (56 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 90.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 174 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0001I Search completed - best objective 0.9648707841988292, took 187 iterations and 0 nodes (5.57 seconds)
Cbc0035I Maximum depth 0, 425 variables fixed on reduced cost
Cuts at root node changed objective from 0.940711 to 0.964871
Probing was tried 3 times and created 97 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 2 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 2 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 174 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                0.96487078
Enumerated nodes:               0
Total iterations:               187
Time (CPU seconds):             1.86
Time (Wallclock seconds):       5.63

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.87   (Wallclock seconds):       5.69

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sergi/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/3ad10776611043b8bbee1ed978efc29b-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/3ad10776611043b8bbee1ed978efc29b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2247 COLUMNS
At line 20188 RHS
At line 22431 BOUNDS
At line 23542 ENDATA
Problem MODEL has 2242 rows, 1110 columns and 15170 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.940711 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 987 strengthened rows, 123 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 993 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 945 strengthened rows, 12 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 853 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 657 strengthened rows, 22 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 456 strengthened rows, 22 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 366 strengthened rows, 22 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 267 strengthened rows, 24 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 16 substitutions
Cgl0004I processed model has 2136 rows, 1002 columns (1002 integer (1002 of which binary)) and 19683 elements
Cbc0038I Initial state - 88 integers unsatisfied sum - 38.2875
Cbc0038I Pass   1: suminf.    2.62363 (7) obj. 0.96487 iterations 535
Cbc0038I Pass   2: suminf.    1.63827 (4) obj. 0.96487 iterations 11
Cbc0038I Pass   3: suminf.    0.18126 (2) obj. 0.963084 iterations 142
Cbc0038I Pass   4: suminf.    0.00011 (2) obj. 0.96487 iterations 579
Cbc0038I Pass   5: suminf.    0.00010 (2) obj. 0.96487 iterations 0
Cbc0038I Pass   6: suminf.    5.34274 (58) obj. 0.96487 iterations 402
Cbc0038I Pass   7: suminf.    3.25593 (27) obj. 0.96487 iterations 255
Cbc0038I Pass   8: suminf.    2.87287 (26) obj. 0.96487 iterations 4
Cbc0038I Pass   9: suminf.    2.91643 (25) obj. 0.96487 iterations 106
Cbc0038I Pass  10: suminf.    2.88911 (25) obj. 0.96487 iterations 25
Cbc0038I Pass  11: suminf.    2.90825 (26) obj. 0.96487 iterations 82
Cbc0038I Pass  12: suminf.    1.47773 (19) obj. 0.96487 iterations 18
Cbc0038I Pass  13: suminf.    3.05201 (18) obj. 0.963905 iterations 133
Cbc0038I Pass  14: suminf.    2.64707 (22) obj. 0.96487 iterations 218
Cbc0038I Pass  15: suminf.    2.97553 (16) obj. 0.96487 iterations 107
Cbc0038I Pass  16: suminf.    2.51685 (26) obj. 0.96487 iterations 18
Cbc0038I Pass  17: suminf.    1.85565 (16) obj. 0.96487 iterations 8
Cbc0038I Pass  18: suminf.    2.35518 (11) obj. 0.96487 iterations 122
Cbc0038I Pass  19: suminf.    2.35518 (11) obj. 0.96487 iterations 5
Cbc0038I Pass  20: suminf.    2.26709 (11) obj. 0.96487 iterations 55
Cbc0038I Pass  21: suminf.    1.87432 (11) obj. 0.96487 iterations 115
Cbc0038I Pass  22: suminf.    2.49316 (16) obj. 0.96487 iterations 150
Cbc0038I Pass  23: suminf.   10.73698 (47) obj. 0.96487 iterations 336
Cbc0038I Pass  24: suminf.    3.85164 (31) obj. 0.96487 iterations 297
Cbc0038I Pass  25: suminf.    3.00408 (21) obj. 0.96487 iterations 66
Cbc0038I Pass  26: suminf.    4.36880 (32) obj. 0.96487 iterations 240
Cbc0038I Pass  27: suminf.    3.40364 (34) obj. 0.96487 iterations 49
Cbc0038I Pass  28: suminf.    3.40364 (34) obj. 0.96487 iterations 7
Cbc0038I Pass  29: suminf.    2.12716 (16) obj. 0.96487 iterations 77
Cbc0038I Pass  30: suminf.    2.08942 (23) obj. 0.96487 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 712 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2136 rows 1002 columns, reduced to 714 rows 169 columns
Cbc0038I Mini branch and bound did not improve solution (2.56 seconds)
Cbc0038I Full problem 2137 rows 1002 columns, reduced to 2112 rows 994 columns - too large
Cbc0038I After 2.82 seconds - Feasibility pump exiting - took 0.62 seconds
Cbc0031I 59 added rows had average density of 58.288136
Cbc0013I At root node, 59 cuts changed objective from 0.94071123 to 0.96472531 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 245 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 173 row cuts average 410.1 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 92 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 8 row cuts average 260.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 418 row cuts average 167.5 elements, 0 column cuts (0 active)  in 0.192 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0.96473433 (4.25 seconds)
Cbc0001I Search completed - best objective 1e+50, took 3414 iterations and 2 nodes (4.75 seconds)
Cbc0032I Strong branching done 20 times (777 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.940711 to 0.964734
Probing was tried 15 times and created 260 cuts of which 0 were active after adding rounds of cuts (0.122 seconds)
Gomory was tried 15 times and created 173 cuts of which 0 were active after adding rounds of cuts (0.074 seconds)
Knapsack was tried 15 times and created 103 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 12 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 15 times and created 431 cuts of which 0 were active after adding rounds of cuts (0.209 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ImplicationCuts was tried 3 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Problem proven infeasible

No feasible solution found
Enumerated nodes:               2
Total iterations:               3414
Time (CPU seconds):             2.68
Time (Wallclock seconds):       4.75

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.69   (Wallclock seconds):       4.79


real	0m15,748s
user	0m6,026s
sys	0m0,260s

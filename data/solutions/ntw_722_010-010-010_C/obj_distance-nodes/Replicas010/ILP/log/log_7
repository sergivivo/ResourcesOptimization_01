Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sergi/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/292d4eace47f4a5a80e0ccd6e43018fc-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/292d4eace47f4a5a80e0ccd6e43018fc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2246 COLUMNS
At line 19637 RHS
At line 21879 BOUNDS
At line 22990 ENDATA
Problem MODEL has 2241 rows, 1110 columns and 14620 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.608181 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 987 strengthened rows, 120 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 988 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 940 strengthened rows, 8 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 829 strengthened rows, 20 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 675 strengthened rows, 20 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 468 strengthened rows, 16 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 309 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 188 strengthened rows, 12 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 148 strengthened rows, 12 substitutions
Cgl0004I processed model has 2145 rows, 1015 columns (1015 integer (1015 of which binary)) and 19228 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.27189
Cbc0038I Solution found of 0.634144
Cbc0038I Before mini branch and bound, 1012 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2145 rows 1015 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (2.63 seconds)
Cbc0038I Round again with cutoff of 0.633948
Cbc0038I Reduced cost fixing fixed 263 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.02850 (3) obj. 0.633948 iterations 516
Cbc0038I Pass   2: suminf.    0.27189 (3) obj. 0.632276 iterations 242
Cbc0038I Pass   3: suminf.    0.02850 (3) obj. 0.633948 iterations 729
Cbc0038I Pass   4: suminf.    2.10952 (5) obj. 0.633948 iterations 647
Cbc0038I Pass   5: suminf.    0.02850 (3) obj. 0.633948 iterations 344
Cbc0038I Pass   6: suminf.    0.06840 (3) obj. 0.633948 iterations 775
Cbc0038I Pass   7: suminf.    0.02850 (3) obj. 0.633948 iterations 638
Cbc0038I Pass   8: suminf.    0.85486 (89) obj. 0.633948 iterations 770
Cbc0038I Pass   9: suminf.    0.45347 (11) obj. 0.633948 iterations 531
Cbc0038I Pass  10: suminf.    0.77657 (35) obj. 0.633948 iterations 581
Cbc0038I Pass  11: suminf.    0.97746 (6) obj. 0.633948 iterations 545
Cbc0038I Pass  12: suminf.    0.02850 (3) obj. 0.633948 iterations 542
Cbc0038I Pass  13: suminf.    0.73516 (119) obj. 0.633948 iterations 506
Cbc0038I Pass  14: suminf.    2.10952 (5) obj. 0.633948 iterations 603
Cbc0038I Pass  15: suminf.    0.02850 (3) obj. 0.633948 iterations 320
Cbc0038I Pass  16: suminf.    0.02850 (3) obj. 0.633948 iterations 403
Cbc0038I Pass  17: suminf.    0.81881 (5) obj. 0.633948 iterations 450
Cbc0038I Pass  18: suminf.    0.83756 (91) obj. 0.633948 iterations 781
Cbc0038I Pass  19: suminf.    0.02850 (3) obj. 0.633948 iterations 465
Cbc0038I Pass  20: suminf.    1.46347 (5) obj. 0.633948 iterations 398
Cbc0038I Pass  21: suminf.    1.46347 (5) obj. 0.633948 iterations 579
Cbc0038I Pass  22: suminf.    0.83294 (38) obj. 0.633948 iterations 592
Cbc0038I Pass  23: suminf.    0.02850 (3) obj. 0.633948 iterations 515
Cbc0038I Pass  24: suminf.    0.94955 (112) obj. 0.633948 iterations 603
Cbc0038I Pass  25: suminf.    0.02850 (3) obj. 0.633948 iterations 498
Cbc0038I Pass  26: suminf.    0.46943 (41) obj. 0.633948 iterations 575
Cbc0038I Pass  27: suminf.    0.02850 (3) obj. 0.633948 iterations 566
Cbc0038I Pass  28: suminf.    1.46347 (5) obj. 0.633948 iterations 569
Cbc0038I Pass  29: suminf.    1.46347 (5) obj. 0.633948 iterations 278
Cbc0038I Pass  30: suminf.    0.02850 (3) obj. 0.633948 iterations 895
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 719 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2145 rows 1015 columns, reduced to 811 rows 197 columns
Cbc0038I Mini branch and bound did not improve solution (7.92 seconds)
Cbc0038I After 7.92 seconds - Feasibility pump exiting with objective of 0.634144 - took 1.83 seconds
Cbc0012I Integer solution of 0.63414404 found by feasibility pump after 0 iterations and 0 nodes (7.92 seconds)
Cbc0031I 2 added rows had average density of 29
Cbc0013I At root node, 9 cuts changed objective from 0.63227648 to 0.63414404 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 24 column cuts (24 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective 0.6341440367916622, took 0 iterations and 0 nodes (8.05 seconds)
Cbc0035I Maximum depth 0, 251 variables fixed on reduced cost
Cuts at root node changed objective from 0.632276 to 0.634144
Probing was tried 1 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                0.63414404
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             2.57
Time (Wallclock seconds):       8.23

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.58   (Wallclock seconds):       8.29

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sergi/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7f9d84910f5f425c85a788e201b04558-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/7f9d84910f5f425c85a788e201b04558-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 2247 COLUMNS
At line 20188 RHS
At line 22431 BOUNDS
At line 23542 ENDATA
Problem MODEL has 2242 rows, 1110 columns and 15170 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.608181 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 987 strengthened rows, 123 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 990 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 938 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 850 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 679 strengthened rows, 20 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 464 strengthened rows, 12 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 284 strengthened rows, 8 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 184 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 117 strengthened rows, 2 substitutions
Cgl0004I processed model has 2139 rows, 1019 columns (1019 integer (1019 of which binary)) and 19684 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.27189
Cbc0038I Pass   1: suminf.    0.00015 (3) obj. 0.634143 iterations 400
Cbc0038I Pass   2: suminf.    0.00015 (3) obj. 0.634143 iterations 0
Cbc0038I Pass   3: suminf.    0.75112 (87) obj. 0.634143 iterations 762
Cbc0038I Pass   4: suminf.    0.95584 (223) obj. 0.634143 iterations 723
Cbc0038I Pass   5: suminf.    0.74901 (202) obj. 0.634143 iterations 900
Cbc0038I Pass   6: suminf.    0.61418 (13) obj. 0.634143 iterations 766
Cbc0038I Pass   7: suminf.    1.08674 (182) obj. 0.634143 iterations 722
Cbc0038I Pass   8: suminf.    2.09061 (5) obj. 0.634143 iterations 903
Cbc0038I Pass   9: suminf.    0.00015 (3) obj. 0.634143 iterations 383
Cbc0038I Pass  10: suminf.    0.81449 (6) obj. 0.634143 iterations 775
Cbc0038I Pass  11: suminf.    0.81449 (6) obj. 0.634143 iterations 316
Cbc0038I Pass  12: suminf.    0.81449 (6) obj. 0.634143 iterations 176
Cbc0038I Pass  13: suminf.    0.81449 (6) obj. 0.634143 iterations 197
Cbc0038I Pass  14: suminf.    0.81449 (6) obj. 0.634143 iterations 201
Cbc0038I Pass  15: suminf.    0.81449 (6) obj. 0.634143 iterations 435
Cbc0038I Pass  16: suminf.    0.81449 (6) obj. 0.634143 iterations 466
Cbc0038I Pass  17: suminf.    2.34859 (20) obj. 0.634143 iterations 990
Cbc0038I Pass  18: suminf.    2.09061 (5) obj. 0.634143 iterations 1077
Cbc0038I Pass  19: suminf.    2.21547 (19) obj. 0.634143 iterations 1106
Cbc0038I Pass  20: suminf.    0.85804 (233) obj. 0.634143 iterations 852
Cbc0038I Pass  21: suminf.    1.62558 (5) obj. 0.634143 iterations 1244
Cbc0038I Pass  22: suminf.    1.33660 (20) obj. 0.634143 iterations 834
Cbc0038I Pass  23: suminf.    0.00015 (3) obj. 0.634143 iterations 778
Cbc0038I Pass  24: suminf.    0.81492 (88) obj. 0.634143 iterations 1448
Cbc0038I Pass  25: suminf.    0.86330 (62) obj. 0.634143 iterations 2207
Cbc0038I Pass  26: suminf.    0.69877 (288) obj. 0.634143 iterations 864
Cbc0038I Pass  27: suminf.    0.89093 (5) obj. 0.634143 iterations 1097
Cbc0038I Pass  28: suminf.    2.09061 (5) obj. 0.634143 iterations 2077
Cbc0038I Pass  29: suminf.    0.81449 (6) obj. 0.634143 iterations 846
Cbc0038I Pass  30: suminf.    0.88252 (5) obj. 0.634143 iterations 979
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2139 rows 1019 columns, reduced to 1894 rows 776 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.12 seconds)
Cbc0038I Full problem 2140 rows 1019 columns, reduced to 2137 rows 1018 columns - too large
Cbc0038I After 4.15 seconds - Feasibility pump exiting - took 2.31 seconds
Cbc0031I 1 added rows had average density of 35
Cbc0013I At root node, 10 cuts changed objective from 0.63227648 to 0.63414404 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective 1e+50, took 0 iterations and 0 nodes (4.30 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.632276 to 0.634144
Probing was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Problem proven infeasible

No feasible solution found
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             2.83
Time (Wallclock seconds):       4.30

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.84   (Wallclock seconds):       4.35


real	0m16,207s
user	0m6,385s
sys	0m0,223s
